@model CyberTech.Models.HomeIndexViewModel
@{
    ViewBag.Title = "Trang chủ";
    Layout = "_Layout";
}

@section Styles {
        <link rel="stylesheet" href="~/css/HomePage_Layout/styles.css">
        <style>
            /* ========================================
               PROMO BANNERS TWO COLUMNS - SPECIFIC CSS
            ======================================== */
            
            .promo-banners-two {
                display: grid;
                grid-template-columns: 1fr 1fr; /* 2 cột 50% 50% */
                gap: 15px;
                margin-bottom: 30px;
            }
            
            .promo-banners-two .promo-banner {
                border-radius: 4px;
                overflow: hidden;
                width: 100%;
            }
            
            .promo-banners-two .promo-banner img {
                width: 100%;
                height: auto;
                display: block;
                object-fit: cover;
            }
            
            /* Responsive cho mobile */
            @@media (max-width: 768px) {
                .promo-banners-two {
                    grid-template-columns: 1fr; /* Trên mobile hiển thị 1 cột */
                    gap: 10px;
                }
            }
            
            /* ========================================
               SIDEBAR STICKY BANNER
            ======================================== */
            
            .sidebar-sticky-banner {
                margin: 20px auto; /* Căn giữa với margin auto */
                position: relative; /* Thay đổi từ sticky sang relative để cuộn cùng */
                z-index: 100;
                max-width: 200px;
                width: 100%;
                display: flex;
                justify-content: center; /* Căn giữa nội dung */
                padding: 0 15px; /* Padding để không sát mép */
                box-sizing: border-box;
            }
            
            .sidebar-sticky-banner img {
                width: 100%;
                max-width: 200px;
                height: auto;
                border-radius: 8px;
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
                transition: transform 0.3s ease, box-shadow 0.3s ease;
                cursor: pointer;
                display: block;
                object-fit: contain;
            }
            
            .sidebar-sticky-banner img:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
            }
            
            /* Responsive: Ẩn banner trên mobile/tablet */
            @@media (max-width: 1024px) {
                .sidebar-sticky-banner {
                    display: none;
                }
            }
            
            /* Điều chỉnh cho sidebar nhỏ hơn */
            @@media (max-width: 1200px) {
                .sidebar-sticky-banner {
                    max-width: 160px;
                    padding: 0 10px;
                }
                
                .sidebar-sticky-banner img {
                    max-width: 160px;
                }
            }
            
            /* ========================================
               FLASH SALE SECTION - SPECIAL DESIGN
            ======================================== */
            
            .flash-sale {
                background: linear-gradient(135deg, #0056b3 0%, #007bff 100%);
                border-radius: 8px;
                padding: 15px;
                margin-bottom: 30px;
                overflow: hidden;
                position: relative;
                box-shadow: 0 5px 15px rgba(0, 86, 179, 0.2);
                border: 1px solid rgba(0, 86, 179, 0.3);
            }
            
            .flash-sale::before {
                content: '';
                position: absolute;
                top: 0;
                left: -50%;
                width: 200%;
                height: 100%;
                background: linear-gradient(45deg, transparent 30%, rgba(255,255,255,0.1) 50%, transparent 70%);
                animation: flashSweep 3s infinite;
            }
            
            @@keyframes flashSweep {
                0% { transform: translateX(-100%); }
                50% { transform: translateX(100%); }
                100% { transform: translateX(100%); }
            }
            
            .flash-sale-header {
                display: flex;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 15px;
                position: relative;
                z-index: 2;
            }
            
            .flash-sale-title {
                display: flex;
                align-items: center;
                gap: 10px;
                color: white;
                font-size: 20px;
                font-weight: 700;
                text-shadow: 1px 1px 2px rgba(0,0,0,0.2);
                margin: 0;
            }
            
            .flash-sale-icon {
                font-size: 22px;
                color: #ffc107;
                animation: lightning 2s infinite alternate;
                text-shadow: 0 0 5px rgba(255, 193, 7, 0.5);
            }
            
            @@keyframes lightning {
                0% { transform: scale(1) rotate(-5deg); }
                50% { transform: scale(1.1) rotate(5deg); }
                100% { transform: scale(1) rotate(-5deg); }
            }
            
            .countdown-timer {
                display: flex;
                align-items: center;
                gap: 8px;
                background: rgba(255,255,255,0.15);
                padding: 6px 12px;
                border-radius: 20px;
                backdrop-filter: blur(5px);
                border: 1px solid rgba(255,255,255,0.2);
            }
            
            .countdown-label {
                color: white;
                font-weight: 600;
                font-size: 12px;
            }
            
            .countdown-display {
                display: flex;
                gap: 5px;
            }
            
            .countdown-item {
                background: rgba(0,0,0,0.3);
                color: white;
                padding: 4px 6px;
                border-radius: 4px;
                font-weight: 700;
                font-size: 14px;
                min-width: 28px;
                text-align: center;
                border: 1px solid rgba(255,255,255,0.2);
                box-shadow: inset 0 1px 2px rgba(0,0,0,0.2);
            }
            
            .countdown-separator {
                color: white;
                font-weight: 700;
                font-size: 14px;
                animation: blink 1s infinite;
            }
            
            @@keyframes blink {
                0%, 50% { opacity: 1; }
                51%, 100% { opacity: 0.3; }
            }
            
            .flash-sale-calendar {
                display: flex;
                flex-direction: column;
                align-items: center;
                background: rgba(255,255,255,0.15);
                padding: 8px;
                border-radius: 8px;
                backdrop-filter: blur(5px);
                border: 1px solid rgba(255,255,255,0.2);
                min-width: 65px;
            }
            
            .current-date {
                font-size: 18px;
                font-weight: 700;
                color: white;
                text-shadow: 1px 1px 2px rgba(0,0,0,0.2);
            }
            
            .flash-sale-content {
                position: relative;
                z-index: 2;
            }
            
            .flash-sale .product-slider {
                background: rgba(255,255,255,0.08);
                border-radius: 6px;
                padding: 12px;
                backdrop-filter: blur(5px);
                border: 1px solid rgba(255,255,255,0.15);
            }
            
            /* Override product card styles for flash sale */
            .flash-sale .proloop-block {
                background: white;
                box-shadow: 0 3px 10px rgba(0,0,0,0.1);
                transform: none;
                transition: all 0.3s ease;
            }
            
            .flash-sale .proloop-block:hover {
                transform: translateY(-3px);
                box-shadow: 0 5px 15px rgba(0,0,0,0.15);
            }
            
            /* Responsive */
            @@media (max-width: 768px) {
                .flash-sale-header {
                    flex-direction: column;
                    gap: 10px;
                    text-align: center;
                }
                
                .flash-sale-title {
                    font-size: 18px;
                }
                
                .countdown-timer {
                    flex-direction: column;
                    gap: 5px;
                    padding: 8px;
                }
                
                .flash-sale-calendar {
                    order: -1;
                }
            }
            
            @@media (max-width: 480px) {
                .flash-sale-title {
                    font-size: 16px;
                    gap: 8px;
                }
                
                .flash-sale-icon {
                    font-size: 18px;
                }
                
                .countdown-item {
                    padding: 3px 5px;
                    font-size: 12px;
                    min-width: 24px;
                }
            }
            
            /* ========================================
               SECTION HEADER & SUBTITLE STYLES
            ======================================== */
            
            .section-header {
                display: flex;
                align-items: center;
                justify-content: flex-start;
                margin-bottom: 15px;
                flex-wrap: wrap;
            }
            
            .section-title {
                margin: 0;
                margin-right: 15px;
            }
            
            .section-separator {
                color: #6c757d;
                margin: 0 10px;
                font-weight: 300;
            }
            
            .section-subtitle {
                font-size: 14px;
                color: #6c757d;
                display: flex;
                align-items: center;
            }
            
            .section-subtitle span {
                display: inline-flex;
                align-items: center;
                gap: 5px;
            }
            
            .section-subtitle i {
                color: #007bff;
                font-size: 16px;
            }
            
            @@media (max-width: 768px) {
                .section-header {
                    flex-direction: column;
                    align-items: flex-start;
                    gap: 5px;
                }
                
                .section-title {
                    margin-right: 0;
                }
                
                .section-separator {
                    display: none;
                }
                
                .section-subtitle {
                    font-size: 12px;
                }
            }

            /* ========================================
               RECENTLY VIEWED SECTION STYLES
            ======================================== */
            
            .recently-viewed-section {
                margin-bottom: 30px;
                padding: 20px;
                background: #f8f9fa;
                border-radius: 8px;
                border: 1px solid #e0e0e0;
            }
            
            /* Loại bỏ grid layout styles vì đã dùng slider */
            
            @@media (max-width: 768px) {
                .recently-viewed-section {
                    padding: 15px;
                    margin-bottom: 20px;
                }
            }

            /* ========================================
               HERO BANNER SECTION
            ======================================== */
            
            .hero-section {
                display: grid;
                grid-template-columns: 2fr 1fr; /* Slider chiếm 2/3, banner phụ 1/3 */
                gap: 15px;
                margin-bottom: 30px;
                align-items: center; /* Căn giữa theo chiều ngang */
                /* Bỏ height cố định để tự động theo ảnh */
            }
            
            .hero-slider {
                position: relative;
                border-radius: 4px; /* Đồng bộ với promo-banner */
                overflow: hidden;
                background: #f8f9fa;
                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08); /* Thêm shadow nhẹ */
                height: 300px; /* Đặt height cố định để tránh nhảy slider */
            }
            
            .slider-container {
                position: relative;
                width: 100%;
                height: 100%; /* Khôi phục height 100% */
                overflow: hidden;
            }
            
            .slider-wrapper {
                display: flex;
                width: 300%; /* 3 slides */
                height: 100%; /* Khôi phục height 100% */
                transition: transform 0.5s ease-in-out;
            }
            
            .slider-item {
                width: 33.333%; /* 1/3 for each slide */
                height: 100%; /* Khôi phục height 100% */
                position: relative;
                flex-shrink: 0; /* Ngăn item bị co lại */
            }
            
            .slider-item img {
                width: 100%;
                height: 100%; /* Đặt height 100% để fill container */
                object-fit: cover; /* Cover để fit và crop nếu cần */
                display: block;
            }
            
            .slider-item a {
                display: block;
                width: 100%;
                height: 100%; /* Khôi phục height 100% */
            }
            
            /* Slider Indicators */
            .slider-indicators {
                position: absolute;
                bottom: 15px; /* Giảm từ 20px */
                left: 50%;
                transform: translateX(-50%);
                display: flex;
                gap: 6px; /* Giảm từ 8px */
                z-index: 10;
            }
            
            .indicator {
                width: 10px; /* Giảm từ 12px */
                height: 10px;
                border-radius: 50%;
                background: rgba(255, 255, 255, 0.5);
                cursor: pointer;
                transition: background 0.3s ease;
                border: 1px solid rgba(255, 255, 255, 0.3); /* Thêm border */
            }
            
            .indicator.active {
                background: white;
                border-color: rgba(255, 255, 255, 0.8);
            }
            
            /* Side Banners */
            .side-banners {
                display: grid;
                grid-template-rows: 1fr 1fr;
                gap: 15px;
                /* Bỏ align-content: start để căn giữa với slider */
            }
            
            .side-banner {
                border-radius: 4px;
                overflow: hidden;
                transition: transform 0.3s ease;
            }
            
            .side-banner:hover {
                transform: translateY(-2px);
            }
            
            .side-banner img {
                width: 100%;
                height: auto; /* Chiều cao tự động theo tỷ lệ ảnh */
                object-fit: cover;
                display: block;
            }
            
            .side-banner a {
                display: block;
                width: 100%;
                /* Bỏ height: 100% để tự động */
            }
            
            /* Responsive */
            @@media (max-width: 1024px) {
                .hero-section {
                    grid-template-columns: 1fr;
                    gap: 15px;
                }
                
                .hero-slider {
                    height: 250px; /* Height cố định cho tablet */
                }
                
                .side-banners {
                    grid-template-columns: 1fr 1fr;
                    grid-template-rows: 1fr;
                }
            }
            
            @@media (max-width: 768px) {
                .hero-section {
                    gap: 10px;
                }
                
                .hero-slider {
                    height: 200px; /* Height cố định cho mobile */
                }
                
                .side-banners {
                    grid-template-columns: 1fr;
                    grid-template-rows: 1fr 1fr;
                }
            }
            
            @@media (max-width: 480px) {
                .hero-slider {
                    height: 150px; /* Height nhỏ hơn cho mobile nhỏ */
                }
            }
            
            /* ========================================
               PROMOTIONAL BANNERS HOVER EFFECTS - OVERRIDE
            ======================================== */
            
            .promo-banner {
                border-radius: 4px;
                overflow: hidden;
                transition: transform 0.3s ease !important;
                cursor: pointer;
            }
            
            .promo-banner:hover {
                transform: translateY(-4px) !important;
            }
            
            .promo-banner img {
                width: 100%;
                height: auto;
                display: block;
            }
            
            /* Hover effects cho promo-banners-two nếu có */
            .promo-banners-two .promo-banner {
                transition: transform 0.3s ease !important;
                cursor: pointer;
            }
            
            .promo-banners-two .promo-banner:hover {
                transform: translateY(-4px) !important;
            }

            /* ========================================
               SMART RECOMMENDATIONS SECTION STYLES
            ======================================== */
            
            .smart-recommendations-section {
                margin-bottom: 30px;
                padding: 25px;
                background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
                border-radius: 12px;
                border: 1px solid #dee2e6;
                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
                position: relative;
                overflow: hidden;
            }
            
            .smart-recommendations-section::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 3px;
                background: linear-gradient(90deg, #007bff, #6610f2, #e83e8c, #fd7e14);
                animation: gradientShift 3s ease-in-out infinite;
            }
            
            @@keyframes gradientShift {
                0%, 100% { opacity: 0.7; }
                50% { opacity: 1; }
            }
            
            .recommendation-icon {
                color: #007bff;
                margin-right: 8px;
                animation: pulse 2s infinite;
            }
            
            @@keyframes pulse {
                0% { transform: scale(1); }
                50% { transform: scale(1.05); }
                100% { transform: scale(1); }
            }
            
            .smart-recommendations-section .section-title {
                color: #2c3e50;
                font-weight: 700;
                display: flex;
                align-items: center;
            }
            
            .smart-recommendations-section .section-subtitle {
                color: #6c757d;
                font-style: italic;
            }
            
            .recommendations-loading {
                text-align: center;
                padding: 40px 0;
                color: #6c757d;
            }
            
            .loading-spinner {
                display: flex;
                flex-direction: column;
                align-items: center;
                gap: 15px;
            }
            
            .loading-spinner i {
                font-size: 24px;
                color: #007bff;
            }
            
            .loading-spinner span {
                font-size: 14px;
                font-weight: 500;
            }
            
            .recommendation-actions {
                margin-top: 20px;
                text-align: center;
                display: flex;
                gap: 15px;
                justify-content: center;
                flex-wrap: wrap;
            }
            
            .recommendation-actions .btn-secondary {
                background: #6c757d;
                color: white;
                border: none;
                padding: 8px 16px;
                border-radius: 20px;
                font-size: 12px;
                font-weight: 500;
                cursor: pointer;
                transition: all 0.3s ease;
                display: flex;
                align-items: center;
                gap: 6px;
            }
            
            .recommendation-actions .btn-secondary:hover {
                background: #5a6268;
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
            }
            
            .recommendation-actions .btn-secondary:active {
                transform: translateY(0);
            }
            
            .recommendation-actions .btn-secondary i {
                font-size: 11px;
            }
            
            /* Responsive styles */
            @@media (max-width: 768px) {
                .smart-recommendations-section {
                    padding: 20px 15px;
                    margin-bottom: 20px;
                }
                
                .recommendation-actions {
                    gap: 10px;
                }
                
                .recommendation-actions .btn-secondary {
                    padding: 6px 12px;
                    font-size: 11px;
                }
            }
            
            @@media (max-width: 480px) {
                .smart-recommendations-section .section-header {
                    flex-direction: column;
                    align-items: flex-start;
                    gap: 8px;
                }
                
                .recommendation-actions {
                    flex-direction: column;
                    align-items: center;
                }
                
                .recommendation-actions .btn-secondary {
                    width: 100%;
                    max-width: 200px;
                    justify-content: center;
                }
            }

            /* ========================================
               RECOMMENDATION BADGE STYLES
            ======================================== */
            
            .recommendation-badge {
                position: absolute;
                top: 8px;
                right: 8px;
                background: linear-gradient(135deg, #007bff, #6610f2);
                color: white;
                padding: 4px 6px;
                border-radius: 12px;
                font-size: 10px;
                font-weight: 600;
                z-index: 5;
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
                animation: recommendationBadgeGlow 2s ease-in-out infinite;
            }
            
            .recommendation-badge i {
                font-size: 8px;
                animation: magicSpark 1.5s ease-in-out infinite;
            }
            
            @@keyframes recommendationBadgeGlow {
                0%, 100% { box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); }
                50% { box-shadow: 0 2px 8px rgba(0, 123, 255, 0.4); }
            }
            
            @@keyframes magicSpark {
                0%, 100% { transform: scale(1) rotate(0deg); }
                25% { transform: scale(1.1) rotate(90deg); }
                50% { transform: scale(1) rotate(180deg); }
                75% { transform: scale(1.1) rotate(270deg); }
            }
        </style>
}

<!-- Sidebar Categories -->
<aside class="sidebar">
    <ul class="category-menu">
        @foreach (var category in Model.Categories)

        {
                <li class="category-item">
                    <a href="@Url.Action("Category", "Product", new { categoryId = category.CategoryID })" class="category-link">
                        <i class="@category.Icon"></i>
                        <span>@category.Name</span>
                        <i class="fas fa-chevron-right"></i>
                    </a>
                @if (category.Subcategories.Any())
                {
                            <div class="submenu">
                                <div class="submenu-container">
                            @foreach (var subcategory in category.Subcategories)

                            {
                                        <div class="submenu-section">
                                            <h3 class="submenu-title">
                                                <a href="@Url.Action("Subcategory", "Product", new { subcategoryId = subcategory.SubcategoryID })">@subcategory.Name</a>
                                            </h3>
                                            <div class="submenu-links">
                                        @foreach (var subSubcategory in subcategory.SubSubcategories)

                                        {
                                                    <a href="@Url.Action("SubSubcategory", "Product", new { subSubcategoryId = subSubcategory.SubSubcategoryID })" class="submenu-link">
                                                    @subSubcategory.Name
                                                        </a>
                                        }
                                            </div>
                                        </div>
                            }
                                </div>
                            </div>
                }
                </li>
        }
    </ul>
    
    <!-- Sticky Banner trong Sidebar -->
    <div class="sidebar-sticky-banner">
        <img src="https://file.hstatic.net/200000722513/file/gearvn-laptop-t4-banner-side.jpg" 
             alt="Laptop Gaming Khuyến Mãi" 
             onclick="window.open('#', '_blank')" 
             title="Xem khuyến mãi laptop gaming">
    </div>
</aside>

<!-- Main Content Area -->
<div class="main-content">
    <!-- Hero Banner Section -->
    <section class="hero-section">
        <!-- Main Auto Slider -->
        <div class="hero-slider">
            <div class="slider-container">
                <div class="slider-wrapper" id="heroSliderWrapper">
                    <!-- Slide 1 -->
                    <div class="slider-item">
                        <img src="https://file.hstatic.net/200000722513/file/man_hinh_thang_04_banner_web_slider_800x400.jpg" 
                             alt="Màn hình khuyến mãi" loading="lazy">
                    </div>
                    <!-- Slide 2 -->
                    <div class="slider-item">
                        <img src="https://file.hstatic.net/200000722513/file/thang_04_pc_tang_man_banner_web_slider_800x400.jpg" 
                             alt="PC tặng màn hình" loading="lazy">
                    </div>
                    <!-- Slide 3 -->
                    <div class="slider-item">
                        <a href="https://gearvn.com/pages/laptop-gaming" target="_blank">
                            <img src="https://file.hstatic.net/200000722513/file/man_hinh_thang_04_banner_web_slider_800x400.jpg" 
                                 alt="Laptop Gaming" loading="lazy">
                        </a>
                    </div>
                </div>
                
                <!-- Slider Indicators -->
                <div class="slider-indicators">
                    <span class="indicator active" data-slide="0"></span>
                    <span class="indicator" data-slide="1"></span>
                    <span class="indicator" data-slide="2"></span>
                </div>
            </div>
        </div>
        
        <!-- Side Banners -->
        <div class="side-banners">
            <div class="side-banner">
                <a href="#" title="Banner khuyến mãi 1">
                    <img src="https://file.hstatic.net/200000722513/file/thang_04_layout_web_-02.png" 
                         alt="Banner khuyến mãi 1" loading="lazy">
                </a>
            </div>
            <div class="side-banner">
                <a href="#" title="Banner khuyến mãi 2">
                    <img src="https://file.hstatic.net/200000722513/file/thang_04_layout_web_-08.png" 
                         alt="Banner khuyến mãi 2" loading="lazy">
                </a>
            </div>
        </div>
    </section>

    <!-- Promotional Banners -->
    <section class="promo-banners">
        <div class="promo-banner">
            <img src="https://file.hstatic.net/200000722513/file/thang_04_layout_web_-01.png" alt="Khuyến mãi">
        </div>
        <div class="promo-banner">
            <img src="https://file.hstatic.net/200000722513/file/thang_04_layout_web_-04.png" alt="Khuyến mãi">
        </div>
        <div class="promo-banner">
            <img src="https://file.hstatic.net/200000722513/file/thang_04_layout_web_-03.png" alt="Khuyến mãi">
        </div>
    </section>

    <!-- Recently Viewed Products Section -->
    <section class="recently-viewed-section" id="recentlyViewedSection" style="display: none;">
        <div class="section-header">
            <h2 class="section-title">Sản phẩm đã xem</h2>
            <span class="section-separator">|</span>
            <div class="section-subtitle">
                <span><i class="fas fa-history"></i> Lịch sử xem gần đây</span>
            </div>
        </div>
        <div class="product-slider">
            <div class="slider-track" id="recentlyViewedContainer">
                <!-- Sản phẩm đã xem sẽ được load bởi JavaScript -->
            </div>
        </div>
    </section>

    <!-- Smart Recommendations Section - Dựa trên Recently Viewed -->
    <section class="smart-recommendations-section" id="smartRecommendationsSection" style="display: none;">
        <div class="section-header">
            <h2 class="section-title">
                <i class="fas fa-magic recommendation-icon"></i>
                Gợi ý cho bạn
            </h2>
            <span class="section-separator">|</span>
            <div class="section-subtitle">
                <span id="recommendationSubtitle">
                    <i class="fas fa-brain"></i> Dựa trên sản phẩm đã xem
                </span>
            </div>
        </div>
        
        <!-- Loading State -->
        <div class="recommendations-loading" id="recommendationsLoading" style="display: none;">
            <div class="loading-spinner">
                <i class="fas fa-spinner fa-spin"></i>
                <span>Đang tìm sản phẩm phù hợp...</span>
            </div>
        </div>
        
        <!-- Recommendations Container -->
        <div class="product-slider" id="recommendationsSlider">
            <div class="slider-track" id="recommendationsContainer">
                <!-- Sản phẩm gợi ý sẽ được load bởi JavaScript -->
            </div>
        </div>
        
        <!-- Recommendation Actions -->
        <div class="recommendation-actions">
            <button class="btn-secondary" onclick="loadSimilarProducts()">
                <i class="fas fa-search"></i> Xem sản phẩm tương tự
            </button>
            <button class="btn-secondary" onclick="loadCrossCategoryProducts()">
                <i class="fas fa-cubes"></i> Phụ kiện đi kèm
            </button>
            <button class="btn-secondary" onclick="refreshRecommendations()">
                <i class="fas fa-refresh"></i> Làm mới gợi ý
            </button>
        </div>
    </section>

    <!-- Flash Sale Section - SPECIAL DESIGN -->
    <section class="flash-sale">
        <div class="flash-sale-header">
            <div class="flash-sale-title">
                <i class="fas fa-bolt flash-sale-icon"></i>
                <span>FLASH SALE</span>
                <div class="countdown-timer">
                    <span class="countdown-label">
                        <i class="fas fa-clock"></i> Kết thúc sau:
                    </span>
                    <div class="countdown-display">
                        <span class="countdown-item hours">02</span>
                        <span class="countdown-separator">:</span>
                        <span class="countdown-item minutes">00</span>
                        <span class="countdown-separator">:</span>
                        <span class="countdown-item seconds">00</span>
                    </div>
                </div>
            </div>
            <div class="flash-sale-calendar">
                <div class="current-date" id="currentDate"></div>
            </div>
        </div>
        <div class="flash-sale-content">
            <div class="product-slider">
                <div class="slider-track">
                    @foreach (var product in Model.FlashSaleProducts)
                    {
                        <partial name="~/Views/Shared/_ProductCardSimple.cshtml" model="product" />
                    }
                </div>
            </div>
        </div>
    </section>

    <!-- Promotional Banners -->
    <section class="promo-banners-two">
        <div class="promo-banner">
            <img src="https://file.hstatic.net/200000722513/file/thang_04_layout_web__1015x325_copy.png" alt="Khuyến mãi">
        </div>
        <div class="promo-banner">
            <img src="https://file.hstatic.net/200000722513/file/thang_04_layout_web__1015x325.png" alt="Khuyến mãi">
        </div>
    </section>

    <!-- Laptop Gaming Slider -->
    <section class="product-category">
        <div class="section-header">
            <h2 class="section-title">Laptop Gaming Bán Chạy</h2>
            <span class="section-separator">|</span>
            <div class="section-subtitle">
                <span><i class="fas fa-truck"></i> Trả góp 0%</span>
            </div>
        </div>
        <div class="product-slider">
            <div class="slider-track">
                @foreach (var product in Model.LaptopGamingBestSellers)

                {
                        <partial name="~/Views/Shared/_ProductCard.cshtml" model="product" />
                }
            </div>
        </div>
    </section>

    <!-- Laptop Văn Phòng Slider -->
    <section class="product-category">
        <div class="section-header">
            <h2 class="section-title">Laptop Văn Phòng Bán Chạy</h2>
            <span class="section-separator">|</span>
            <div class="section-subtitle">
                <span><i class="fas fa-truck"></i> Giao hàng toàn quốc</span>
            </div>
        </div>
        <div class="product-slider">
            <div class="slider-track">
                @foreach (var product in Model.LaptopOfficeBestSellers)

                {
                        <partial name="~/Views/Shared/_ProductCard.cshtml" model="product" />
                }
            </div>
        </div>
    </section>

    <!-- PC Gaming Slider -->
    <section class="product-category">
        <div class="section-header">
            <h2 class="section-title">PC Gaming Bán Chạy</h2>
            <span class="section-separator">|</span>
            <div class="section-subtitle">
                <span><i class="fas fa-truck"></i> Miễn phí giao hàng</span>
            </div>
        </div>
        <div class="product-slider">
            <div class="slider-track">
                @foreach (var product in Model.PcGamingBestSellers)

                {
                        <partial name="~/Views/Shared/_ProductCard.cshtml" model="product" />
                }
            </div>
        </div>
    </section>

    <!-- Chuột Slider -->
    <section class="product-category">
        <div class="section-header">
            <h2 class="section-title">Chuột Bán Chạy</h2>
            <span class="section-separator">|</span>
            <div class="section-subtitle">
                <span><i class="fas fa-truck"></i> Trả góp 0%</span>
            </div>
        </div>
        <div class="product-slider">
            <div class="slider-track">
                @foreach (var product in Model.MouseBestSellers)

                {
                        <partial name="~/Views/Shared/_ProductCard.cshtml" model="product" />
                }
            </div>
        </div>
    </section>

    <!-- Màn Hình Slider -->
    <section class="product-category">
        <div class="section-header">
            <h2 class="section-title">Màn Hình Bán Chạy</h2>
            <span class="section-separator">|</span>
            <div class="section-subtitle">
                <span><i class="fas fa-truck"></i> Giao hàng toàn quốc</span>
            </div>
        </div>
        <div class="product-slider">
            <div class="slider-track">
                @foreach (var product in Model.MonitorBestSellers)

                {
                        <partial name="~/Views/Shared/_ProductCard.cshtml" model="product" />
                }
            </div>
        </div>
    </section>

    <!-- Bàn Phím Slider -->
    <section class="product-category">
        <div class="section-header">
            <h2 class="section-title">Bàn Phím Bán Chạy</h2>
            <span class="section-separator">|</span>
            <div class="section-subtitle">
                <span><i class="fas fa-truck"></i> Miễn phí giao hàng</span>
            </div>
        </div>
        <div class="product-slider">
            <div class="slider-track">
                @foreach (var product in Model.KeyboardBestSellers)

                {
                        <partial name="~/Views/Shared/_ProductCard.cshtml" model="product" />
                }
            </div>
        </div>
    </section>
</div>

@section Scripts {
        <script>
            // ========================================
            // HERO AUTO SLIDER
            // ========================================
            
            let currentSlide = 0;
            const totalSlides = 3;
            const sliderWrapper = document.getElementById('heroSliderWrapper');
            const indicators = document.querySelectorAll('.indicator');
            
            // Auto slide every 4 seconds
            let autoSlideInterval = setInterval(nextSlide, 4000);
            
            function showSlide(slideIndex) {
                currentSlide = slideIndex;
                
                // Move slider
                const translateX = -(slideIndex * 33.333);
                sliderWrapper.style.transform = `translateX(${translateX}%)`;
                
                // Update indicators
                indicators.forEach((indicator, index) => {
                    indicator.classList.toggle('active', index === slideIndex);
                });
            }
            
            function nextSlide() {
                currentSlide = (currentSlide + 1) % totalSlides;
                showSlide(currentSlide);
            }
            
            function prevSlide() {
                currentSlide = (currentSlide - 1 + totalSlides) % totalSlides;
                showSlide(currentSlide);
            }
            
            // Indicator click handlers
            indicators.forEach((indicator, index) => {
                indicator.addEventListener('click', () => {
                    showSlide(index);
                    
                    // Reset auto slide timer
                    clearInterval(autoSlideInterval);
                    autoSlideInterval = setInterval(nextSlide, 4000);
                });
            });
            
            // Pause auto slide on hover
            const heroSlider = document.querySelector('.hero-slider');
            heroSlider.addEventListener('mouseenter', () => {
                clearInterval(autoSlideInterval);
            });
            
            heroSlider.addEventListener('mouseleave', () => {
                autoSlideInterval = setInterval(nextSlide, 4000);
            });
            
            // ========================================
            // EXISTING CODE
            // ========================================
            
            // Chạy ngay khi DOM đã sẵn sàng
            document.addEventListener('DOMContentLoaded', function() {
                // Cập nhật ngày tháng hiện tại ngay lập tức
                updateCurrentDate();
                
                // Bắt đầu đồng hồ đếm ngược ngay lập tức
                updateCountdown();

                // Load recently viewed products
                loadRecentlyViewedProducts();
                
                // Load smart recommendations sau khi recently viewed được load
                setTimeout(() => {
                    loadSmartRecommendations();
                }, 500);
            });
            
            // ========================================
            // CALENDAR DISPLAY - Hiển thị ngày/tháng thực
            // ========================================
            
            // Cập nhật ngày tháng hiện tại
            function updateCurrentDate() {
                const today = new Date();
                const day = today.getDate();
                const month = today.getMonth() + 1; // JavaScript tháng bắt đầu từ 0
                
                // Format: DD/MM
                const formattedDate = 
                    (day < 10 ? '0' + day : day) + '/' + 
                    (month < 10 ? '0' + month : month);
                
                // Cập nhật vào DOM
                document.getElementById('currentDate').textContent = formattedDate;
            }
            
            // ========================================
            // FLASH SALE COUNTDOWN TIMER (2 Hours Loop)
            // ========================================
            
            // Bắt đầu với 2:00:00 (7200 giây)
            let timeRemaining = 7200;
            
            // Cập nhật đồng hồ countdown
            function updateCountdown() {
                const hours = Math.floor(timeRemaining / 3600);
                const minutes = Math.floor((timeRemaining % 3600) / 60);
                const seconds = timeRemaining % 60;
                
                // Cập nhật giao diện
                document.querySelector('.hours').textContent = String(hours).padStart(2, '0');
                document.querySelector('.minutes').textContent = String(minutes).padStart(2, '0');
                document.querySelector('.seconds').textContent = String(seconds).padStart(2, '0');
                
                // Giảm thời gian đếm ngược
                timeRemaining--;
                
                // Reset về 2:00:00 khi về 0
                if (timeRemaining < 0) {
                    timeRemaining = 7200;
                }
                
                // Tiếp tục đếm ngược mỗi 1 giây
                setTimeout(updateCountdown, 1000);
            }
            
            // Đợi jQuery và Slick slider sẵn sàng
            function initializeAllSliders() {
                if (typeof $ !== 'undefined' && $.fn.slick) {
                    // Exclude recommendations slider và recently viewed slider vì chúng có logic riêng
                    $('.product-slider').not('#recommendationsSlider').not('#recentlyViewedSection .product-slider').slick({
                        dots: true,
                        arrows: true,
                        infinite: false,
                        speed: 300,
                        slidesToShow: 4,
                        slidesToScroll: 1,
                        responsive: [
                            {
                                breakpoint: 1024,
                                settings: {
                                    slidesToShow: 3,
                                    slidesToScroll: 1,
                                    infinite: false,
                                    arrows: true
                                }
                            },
                            {
                                breakpoint: 600,
                                settings: {
                                    slidesToShow: 2,
                                    slidesToScroll: 1,
                                    infinite: false,
                                    arrows: true
                                }
                            },
                            {
                                breakpoint: 480,
                                settings: {
                                    slidesToShow: 1,
                                    slidesToScroll: 1,
                                    infinite: false,
                                    arrows: false
                                }
                            }
                        ]
                    });
                } else {
                    // Retry sau 100ms nếu jQuery/Slick chưa sẵn sàng
                    setTimeout(initializeAllSliders, 100);
                }
            }
            
            // Khởi tạo sliders khi jQuery sẵn sàng
            if (typeof $ !== 'undefined') {
                $(document).ready(initializeAllSliders);
            } else {
                // Fallback nếu jQuery chưa load
                document.addEventListener('DOMContentLoaded', initializeAllSliders);
            }

            // ========================================
            // RECENTLY VIEWED PRODUCTS - LOCALSTORAGE
            // ========================================
            
            // Lưu sản phẩm vào localStorage khi xem
            function saveProductToRecentlyViewed(productData) {
                try {
                    let recentlyViewed = JSON.parse(localStorage.getItem('recentlyViewedProducts') || '[]');
                    
                    // Loại bỏ sản phẩm nếu đã tồn tại (tránh duplicate)
                    recentlyViewed = recentlyViewed.filter(item => item.id !== productData.id);
                    
                    // Thêm sản phẩm mới vào đầu array
                    recentlyViewed.unshift(productData);
                    
                    // Giới hạn tối đa 10 sản phẩm
                    if (recentlyViewed.length > 10) {
                        recentlyViewed = recentlyViewed.slice(0, 10);
                    }
                    
                    // Lưu vào localStorage
                    localStorage.setItem('recentlyViewedProducts', JSON.stringify(recentlyViewed));
                    
                    // Refresh display
                    loadRecentlyViewedProducts();
                    
                    // Load smart recommendations based on recently viewed
                    loadSmartRecommendations();
                } catch (error) {
                    console.error('Error saving product to recently viewed:', error);
                }
            }
            
            // Load và hiển thị sản phẩm đã xem
            function loadRecentlyViewedProducts() {
                try {
                    const recentlyViewed = JSON.parse(localStorage.getItem('recentlyViewedProducts') || '[]');
                    const container = document.getElementById('recentlyViewedContainer');
                    const section = document.getElementById('recentlyViewedSection');
                    
                    if (recentlyViewed.length === 0) {
                        section.style.display = 'none';
                        return;
                    }
                    
                    // Hiển thị section
                    section.style.display = 'block';
                    
                    // Tạo HTML cho các sản phẩm
                    let html = '';
                    recentlyViewed.forEach(product => {
                        html += createRecentlyViewedCard(product);
                    });
                    
                    container.innerHTML = html;
                    
                    // Đợi jQuery sẵn sàng rồi mới khởi tạo slider
                    function initializeSlider() {
                        if (typeof $ !== 'undefined' && $.fn.slick) {
                            // Destroy existing slick slider nếu có
                            const $recentlyViewedSlider = $('#recentlyViewedSection .product-slider');
                            if ($recentlyViewedSlider.hasClass('slick-initialized')) {
                                $recentlyViewedSlider.slick('unslick');
                            }
                            
                            // Khởi tạo slick slider cho recently viewed
                            $recentlyViewedSlider.slick({
                                dots: true,
                                arrows: true,
                                infinite: false,
                                speed: 300,
                                slidesToShow: 4,
                                slidesToScroll: 1,
                                responsive: [
                                    {
                                        breakpoint: 1024,
                                        settings: {
                                            slidesToShow: 3,
                                            slidesToScroll: 1,
                                            infinite: false,
                                            arrows: true
                                        }
                                    },
                                    {
                                        breakpoint: 600,
                                        settings: {
                                            slidesToShow: 2,
                                            slidesToScroll: 1,
                                            infinite: false,
                                            arrows: true
                                        }
                                    },
                                    {
                                        breakpoint: 480,
                                        settings: {
                                            slidesToShow: 1,
                                            slidesToScroll: 1,
                                            infinite: false,
                                            arrows: false
                                        }
                                    }
                                ]
                            });
                        } else {
                            // Retry sau 100ms nếu jQuery chưa sẵn sàng
                            setTimeout(initializeSlider, 100);
                        }
                    }
                    
                    // Bắt đầu khởi tạo slider
                    initializeSlider();
                    
                } catch (error) {
                    console.error('Error loading recently viewed products:', error);
                    document.getElementById('recentlyViewedSection').style.display = 'none';
                }
            }
            
            // Tạo HTML card cho sản phẩm đã xem - sử dụng structure của _ProductCardSimple
            function createRecentlyViewedCard(product) {
                const hasDiscount = product.originalPrice && product.currentPrice < product.originalPrice;
                const discountPercent = hasDiscount ? Math.round(((product.originalPrice - product.currentPrice) / product.originalPrice) * 100) : 0;
                
                let priceHtml = '';
                if (hasDiscount) {
                    // Có sale: hiển thị giá gốc trên, giá sale + badge dưới
                    priceHtml = `
                        <div class="price-container">
                            <!-- Giá gốc ở trên -->
                            <div class="original-price-line">
                                <span class="proloop-price--compare original-price">${formatPrice(product.originalPrice)}</span>
                            </div>
                            <!-- Giá sale và badge cùng hàng -->
                            <div class="sale-price-line">
                                <span class="proloop-price--highlight sale-price">${formatPrice(product.currentPrice)}</span>
                                <span class="discount-badge">-${discountPercent}%</span>
                            </div>
                        </div>
                    `;
                } else {
                    // Không sale: hiển thị giá gốc màu đen
                    priceHtml = `
                        <div class="price-container">
                            <span class="proloop-price--highlight regular-price">${formatPrice(product.currentPrice)}</span>
                        </div>
                    `;
                }

                // Tạo HTML rating với thông tin thực tế
                const rating = product.rating || 0;
                const reviewCount = product.reviewCount || 0;
                const ratingHtml = `
                    <div class="proloop-rating">
                        <span class="number">${rating.toFixed(1)}</span>
                        <span class="count">(${reviewCount} đánh giá)</span>
                    </div>
                `;
                
                return `
                    <div class="proloop slick-slide" data-id="${product.id}" data-list-items-item_name="${product.name}" data-list-items-item-price="${product.currentPrice}" aria-hidden="true" style="width: 220px; margin: 5px; flex: 0 0 220px; max-width: 220px; box-sizing: border-box;">
                        <div class="proloop-block has-rating" id="collapi_item_loop_${product.id}" data-id="${product.id}" onclick="window.location.href='${product.url}'" title="Xem chi tiết ${product.name}">
                            <div class="proloop-img">
                                <div class="aspect-ratio fade-box">
                                    <img class="img-default lazyloaded" src="${product.image}" alt="${product.name}" onerror="this.src='/images/no-image.png'" />
                                </div>
                            </div>
                            <div class="proloop-detail">
                                <h3 class="proloop-name">
                                    ${product.name}
                                </h3>
                                
                                <!-- Loại bỏ phần proloop-technical (attributes) -->
                                
                                <div class="proloop-price">
                                    ${priceHtml}
                                </div>
                                ${ratingHtml}
                            </div>
                        </div>
                    </div>
                `;
            }
            
            // Format giá tiền
            function formatPrice(price) {
                return price.toLocaleString('vi-VN') + '₫';
            }
            
            // Hàm để gọi từ trang ProductDetail để lưu sản phẩm vừa xem - REMOVED
            // Sử dụng hàm từ recently-viewed.js thay thế
            
            // Clear recently viewed (để test hoặc user muốn xóa)
            window.clearRecentlyViewed = function() {
                localStorage.removeItem('recentlyViewedProducts');
                document.getElementById('recentlyViewedSection').style.display = 'none';
            };
            
            // Trigger refresh recently viewed khi có update từ external file
            window.refreshRecentlyViewed = function() {
                loadRecentlyViewedProducts();
                loadSmartRecommendations();
            };

            // ========================================
            // TEST FUNCTIONS - CHỈ ĐỂ TEST
            // ========================================
            
            // Tạo dữ liệu test cho recently viewed (có thể xóa sau)
            window.addTestData = function() {
                // Clear existing data first
                localStorage.removeItem('recentlyViewedProducts');
                
                // Add some test products với rating
                addToRecentlyViewed(1, 'PC GVN Intel i7-14700F/ VGA RTX 4070 Super', 'https://product.hstatic.net/200000722513/product/gearvn-pc-gvn-intel-i7-14700f-vga-rtx-4070-super-1_65eb8bfbba344c7c8b1b11a8a5fce2c5.jpg', 39990000, 44320000, '/Product/ProductDetail/1', 4.5, 123);
                addToRecentlyViewed(2, 'Laptop Gaming Asus ROG Strix G15', 'https://product.hstatic.net/200000722513/product/laptop-gaming-asus-rog-strix-g15-1_5da6789456.jpg', 25990000, 29990000, '/Product/ProductDetail/2', 4.2, 87);
                addToRecentlyViewed(3, 'Chuột Gaming Logitech G Pro X', 'https://product.hstatic.net/200000722513/product/chuot-gaming-logitech-g-pro-x-1_8a9b123def.jpg', 1990000, 1990000, '/Product/ProductDetail/3', 4.8, 256);
                
                console.log('Test data added to recently viewed');
            };
            
            // Console commands để test
            console.log('=== RECENTLY VIEWED TEST COMMANDS ===');
            console.log('addTestData() - Thêm dữ liệu test');
            console.log('clearRecentlyViewed() - Xóa tất cả');
            console.log('getRecentlyViewedProducts() - Xem dữ liệu hiện tại');
            console.log('=== SMART RECOMMENDATIONS TEST ===');
            console.log('loadSimilarProducts() - Test Xem sản phẩm tương tự');
            console.log('loadCrossCategoryProducts() - Test Phụ kiện đi kèm');
            console.log('refreshRecommendations() - Test Làm mới gợi ý');
            console.log('testRecommendationsSlider() - Test slider arrows');
            
            // Function để xem recently viewed products
            window.getRecentlyViewedProducts = function() {
                const recentlyViewed = JSON.parse(localStorage.getItem('recentlyViewedProducts') || '[]');
                console.log('Recently Viewed Products:', recentlyViewed);
                return recentlyViewed;
            };
            
            // Test recommendations slider
            window.testRecommendationsSlider = function() {
                console.log('=== TESTING RECOMMENDATIONS SLIDER ===');
                const slider = document.getElementById('recommendationsSlider');
                console.log('Slider element:', slider);
                console.log('Slider display:', slider ? slider.style.display : 'Not found');
                
                if (slider) {
                    const items = slider.querySelectorAll('.recommendation-item, .proloop');
                    console.log('Items count:', items.length);
                    console.log('Items:', items);
                }
                
                if (typeof $ !== 'undefined') {
                    const $slider = $('#recommendationsSlider');
                    console.log('jQuery slider:', $slider.length);
                    
                    if ($slider.hasClass('slick-initialized')) {
                        console.log('✅ Slider is initialized');
                        const settings = $slider.slick('getSlick');
                        console.log('Slick settings:', settings);
                        console.log('Current slide:', settings.currentSlide);
                        console.log('Slide count:', settings.slideCount);
                        console.log('Slides to show:', settings.options.slidesToShow);
                        console.log('Arrows enabled:', settings.options.arrows);
                        console.log('Infinite:', settings.options.infinite);
                        
                        // Check arrow elements
                        const prevArrow = $slider.find('.slick-prev');
                        const nextArrow = $slider.find('.slick-next');
                        console.log('Prev arrow:', prevArrow.length, prevArrow.hasClass('slick-disabled') ? 'DISABLED' : 'ENABLED');
                        console.log('Next arrow:', nextArrow.length, nextArrow.hasClass('slick-disabled') ? 'DISABLED' : 'ENABLED');
                    } else {
                        console.log('❌ Slider is NOT initialized');
                        // Try to initialize manually
                        console.log('Attempting manual initialization...');
                        initializeRecommendationSlider();
                    }
                } else {
                    console.log('jQuery not available');
                }
                
                return {
                    element: slider,
                    itemCount: slider ? slider.querySelectorAll('.recommendation-item, .proloop').length : 0,
                    isInitialized: typeof $ !== 'undefined' ? $('#recommendationsSlider').hasClass('slick-initialized') : false
                };
            };

            // ========================================
            // SMART RECOMMENDATIONS - API INTEGRATION
            // ========================================
            
            // Load smart recommendations dựa trên recently viewed
            async function loadSmartRecommendations() {
                try {
                    const recentlyViewed = JSON.parse(localStorage.getItem('recentlyViewedProducts') || '[]');
                    const section = document.getElementById('smartRecommendationsSection');
                    
                    if (recentlyViewed.length === 0) {
                        section.style.display = 'none';
                        return;
                    }
                    
                    // Hiển thị section và loading state
                    section.style.display = 'block';
                    showRecommendationsLoading(true);
                    
                    // Lấy IDs từ recently viewed
                    const productIds = recentlyViewed.map(item => item.id);
                    
                    // Call API để lấy recommendations
                    const recommendations = await fetchRecommendations('recently-viewed', productIds);
                    
                    if (recommendations && recommendations.length > 0) {
                        displayRecommendations(recommendations, 'Dựa trên sản phẩm đã xem');
                    } else {
                        // Fallback 1: Try cross-category recommendations
                        const crossRecommendations = await fetchRecommendations('cross-category', productIds);
                        if (crossRecommendations && crossRecommendations.length > 0) {
                            displayRecommendations(crossRecommendations, 'Phụ kiện & sản phẩm đi kèm');
                        } else {
                            // Fallback 2: Hiển thị recently viewed products làm recommendations
                            displayFallbackRecommendations(recentlyViewed);
                        }
                    }
                    
                } catch (error) {
                    console.error('Error loading smart recommendations:', error);
                    // Fallback: Hiển thị recently viewed products
                    const recentlyViewed = JSON.parse(localStorage.getItem('recentlyViewedProducts') || '[]');
                    if (recentlyViewed.length > 0) {
                        displayFallbackRecommendations(recentlyViewed);
                    } else {
                        document.getElementById('smartRecommendationsSection').style.display = 'none';
                    }
                } finally {
                    showRecommendationsLoading(false);
                }
            }
            
            // Fetch recommendations từ API
            async function fetchRecommendations(type, productIds, limit = 8) {
                try {
                    const response = await fetch(`/api/recommendation/${type}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            productIds: productIds,
                            limit: limit
                        })
                    });
                    
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    
                    const data = await response.json();
                    
                    if (data.success) {
                        return data.products;
                    } else {
                        console.warn('API returned error:', data.message);
                        return [];
                    }
                } catch (error) {
                    console.error('Error fetching recommendations:', error);
                    return [];
                }
            }
            
            // Hiển thị recommendations
            function displayRecommendations(products, subtitle) {
                try {
                    const container = document.getElementById('recommendationsContainer');
                    const subtitleElement = document.getElementById('recommendationSubtitle');
                    
                    // Update subtitle
                    if (subtitleElement && subtitle) {
                        subtitleElement.innerHTML = `<i class="fas fa-brain"></i> ${subtitle}`;
                    }
                    
                    // Tạo HTML cho recommendations
                    let html = '';
                    products.forEach(product => {
                        html += createRecommendationCard(product);
                    });
                    
                    container.innerHTML = html;
                    
                    // Đợi DOM update rồi khởi tạo slider
                    setTimeout(() => {
                        initializeRecommendationSlider();
                    }, 100);
                    
                } catch (error) {
                    console.error('Error displaying recommendations:', error);
                }
            }
            
            // Tạo HTML card cho recommendation - sử dụng structure tương tự _ProductCardSimple
            function createRecommendationCard(product) {
                const hasDiscount = product.salePrice && product.salePrice < product.price;
                const discountPercent = hasDiscount ? Math.round(((product.price - product.salePrice) / product.price) * 100) : 0;
                const currentPrice = product.salePrice || product.price;
                
                let priceHtml = '';
                if (hasDiscount) {
                    priceHtml = `
                        <div class="price-container">
                            <div class="original-price-line">
                                <span class="proloop-price--compare original-price">${formatPrice(product.price)}</span>
                            </div>
                            <div class="sale-price-line">
                                <span class="proloop-price--highlight sale-price">${formatPrice(currentPrice)}</span>
                                <span class="discount-badge">-${discountPercent}%</span>
                            </div>
                        </div>
                    `;
                } else {
                    priceHtml = `
                        <div class="price-container">
                            <span class="proloop-price--highlight regular-price">${formatPrice(currentPrice)}</span>
                        </div>
                    `;
                }

                const rating = product.averageRating || 0;
                const reviewCount = product.reviewCount || 0;
                const ratingHtml = `
                    <div class="proloop-rating">
                        <span class="number">${rating.toFixed(1)}</span>
                        <span class="count">(${reviewCount} đánh giá)</span>
                    </div>
                `;
                
                return `
                    <div class="proloop slick-slide recommendation-item" data-id="${product.productID}" onclick="window.location.href='${product.url}'" title="Xem chi tiết ${product.name}">
                        <div class="proloop-block has-rating" id="recommendation_item_${product.productID}">
                            <div class="proloop-img">
                                <div class="aspect-ratio fade-box">
                                    <img class="img-default lazyloaded" src="${product.primaryImageUrl}" alt="${product.name}" onerror="this.src='/images/no-image.png'" />
                                </div>
                                <!-- Recommendation Badge -->
                                <div class="recommendation-badge">
                                    <i class="fas fa-magic"></i>
                                </div>
                            </div>
                            <div class="proloop-detail">
                                <h3 class="proloop-name">${product.name}</h3>
                                <div class="proloop-price">
                                    ${priceHtml}
                                </div>
                                ${ratingHtml}
                            </div>
                        </div>
                    </div>
                `;
            }
            
            // Khởi tạo slider cho recommendations
            function initializeRecommendationSlider() {
                if (typeof $ !== 'undefined' && $.fn.slick) {
                    // Sửa selector: #recommendationsSlider chính là .product-slider
                    const $slider = $('#recommendationsSlider');
                    
                    // Kiểm tra số lượng items trước khi khởi tạo
                    const itemCount = $slider.find('.recommendation-item, .proloop').length;
                    console.log('Recommendations slider items count:', itemCount);
                    
                    // Destroy existing slider nếu có
                    if ($slider.hasClass('slick-initialized')) {
                        $slider.slick('unslick');
                    }
                    
                    // Chỉ khởi tạo slider nếu có ít nhất 1 item
                    if (itemCount > 0) {
                        // Khởi tạo slick slider với logic arrows thông minh
                        $slider.slick({
                            dots: true,
                            arrows: true,
                            infinite: itemCount > 4, // Chỉ infinite nếu có > 4 items
                            speed: 300,
                            slidesToShow: Math.min(4, itemCount), // Không show nhiều hơn số items có
                            slidesToScroll: 1,
                            adaptiveHeight: true,
                            responsive: [
                                {
                                    breakpoint: 1024,
                                    settings: {
                                        slidesToShow: Math.min(3, itemCount),
                                        slidesToScroll: 1,
                                        arrows: itemCount > 3, // Chỉ show arrows nếu cần scroll
                                        infinite: itemCount > 3
                                    }
                                },
                                {
                                    breakpoint: 600,
                                    settings: {
                                        slidesToShow: Math.min(2, itemCount),
                                        slidesToScroll: 1,
                                        arrows: itemCount > 2,
                                        infinite: itemCount > 2
                                    }
                                },
                                {
                                    breakpoint: 480,
                                    settings: {
                                        slidesToShow: 1,
                                        slidesToScroll: 1,
                                        arrows: itemCount > 1,
                                        infinite: itemCount > 1
                                    }
                                }
                            ]
                        });
                        
                        console.log('Recommendations slider initialized with', itemCount, 'items');
                    } else {
                        console.warn('No items found for recommendations slider');
                    }
                } else {
                    setTimeout(initializeRecommendationSlider, 100);
                }
            }
            
            // Hiển thị/ẩn loading state
            function showRecommendationsLoading(show) {
                const loading = document.getElementById('recommendationsLoading');
                const slider = document.getElementById('recommendationsSlider');
                
                if (show) {
                    loading.style.display = 'block';
                    slider.style.display = 'none';
                } else {
                    loading.style.display = 'none';
                    slider.style.display = 'block';
                }
            }
            
            // Button handlers cho recommendation actions
            async function loadSimilarProducts() {
                try {
                    const section = document.getElementById('smartRecommendationsSection');
                    if (section.style.display === 'none') {
                        section.style.display = 'block';
                    }
                    
                    showRecommendationsLoading(true);
                    const recentlyViewed = JSON.parse(localStorage.getItem('recentlyViewedProducts') || '[]');
                    
                    if (recentlyViewed.length === 0) {
                        console.warn('No recently viewed products for similar recommendations');
                        showRecommendationsLoading(false);
                        return;
                    }
                    
                    const productIds = recentlyViewed.slice(0, 3).map(item => item.id);
                    console.log('Loading similar products for IDs:', productIds);
                    
                    const recommendations = await fetchRecommendations('similar', productIds);
                    
                    if (recommendations && recommendations.length > 0) {
                        displayRecommendations(recommendations, 'Sản phẩm tương tự');
                    } else {
                        // Fallback: hiển thị shuffled recently viewed
                        console.log('No similar products found, showing fallback');
                        displayFallbackRecommendations(recentlyViewed, 'Sản phẩm tương tự (gợi ý)');
                    }
                } catch (error) {
                    console.error('Error loading similar products:', error);
                    // Fallback on error
                    const recentlyViewed = JSON.parse(localStorage.getItem('recentlyViewedProducts') || '[]');
                    if (recentlyViewed.length > 0) {
                        displayFallbackRecommendations(recentlyViewed, 'Sản phẩm tương tự (gợi ý)');
                    }
                } finally {
                    showRecommendationsLoading(false);
                }
            }
            
            async function loadCrossCategoryProducts(productIds = null) {
                try {
                    const section = document.getElementById('smartRecommendationsSection');
                    if (section.style.display === 'none') {
                        section.style.display = 'block';
                    }
                    
                    showRecommendationsLoading(true);
                    
                    if (!productIds) {
                        const recentlyViewed = JSON.parse(localStorage.getItem('recentlyViewedProducts') || '[]');
                        if (recentlyViewed.length === 0) {
                            console.warn('No recently viewed products for cross-category recommendations');
                            showRecommendationsLoading(false);
                            return;
                        }
                        productIds = recentlyViewed.slice(0, 3).map(item => item.id);
                    }
                    
                    console.log('Loading cross-category products for IDs:', productIds);
                    
                    const recommendations = await fetchRecommendations('cross-category', productIds);
                    
                    if (recommendations && recommendations.length > 0) {
                        displayRecommendations(recommendations, 'Phụ kiện & sản phẩm đi kèm');
                    } else {
                        // Fallback: hiển thị shuffled recently viewed
                        console.log('No cross-category products found, showing fallback');
                        const recentlyViewed = JSON.parse(localStorage.getItem('recentlyViewedProducts') || '[]');
                        displayFallbackRecommendations(recentlyViewed, 'Phụ kiện đi kèm (gợi ý)');
                    }
                } catch (error) {
                    console.error('Error loading cross-category products:', error);
                    // Fallback on error
                    const recentlyViewed = JSON.parse(localStorage.getItem('recentlyViewedProducts') || '[]');
                    if (recentlyViewed.length > 0) {
                        displayFallbackRecommendations(recentlyViewed, 'Phụ kiện đi kèm (gợi ý)');
                    }
                } finally {
                    showRecommendationsLoading(false);
                }
            }
            
            async function refreshRecommendations() {
                await loadSmartRecommendations();
            }

            // Hiển thị fallback recommendations từ recently viewed
            function displayFallbackRecommendations(recentlyViewed, subtitle = 'Sản phẩm đã xem gần đây') {
                try {
                    const container = document.getElementById('recommendationsContainer');
                    const subtitleElement = document.getElementById('recommendationSubtitle');
                    
                    // Update subtitle
                    if (subtitleElement) {
                        subtitleElement.innerHTML = `<i class="fas fa-history"></i> ${subtitle}`;
                    }
                    
                    // Đảm bảo có ít nhất 8 items bằng cách duplicate nếu cần
                    let itemsToShow = [...recentlyViewed];
                    
                    // Nếu ít hơn 8 items, duplicate để đủ
                    while (itemsToShow.length < 8 && recentlyViewed.length > 0) {
                        itemsToShow = itemsToShow.concat([...recentlyViewed]);
                    }
                    
                    // Shuffle và lấy tối đa 8 sản phẩm unique
                    const shuffled = itemsToShow.sort(() => 0.5 - Math.random());
                    const selected = shuffled.slice(0, 8);
                    
                    console.log('Fallback recommendations: showing', selected.length, 'items');
                    
                    // Tạo HTML cho recommendations
                    let html = '';
                    selected.forEach((product, index) => {
                        // Thêm unique ID để tránh conflict
                        const uniqueProduct = {...product, id: `${product.id}_fallback_${index}`};
                        html += createFallbackRecommendationCard(uniqueProduct);
                    });
                    
                    container.innerHTML = html;
                    
                    // Khởi tạo slider
                    setTimeout(() => {
                        initializeRecommendationSlider();
                    }, 100);
                    
                } catch (error) {
                    console.error('Error displaying fallback recommendations:', error);
                }
            }
            
            // Tạo card cho fallback recommendation
            function createFallbackRecommendationCard(product) {
                const hasDiscount = product.originalPrice && product.currentPrice < product.originalPrice;
                const discountPercent = hasDiscount ? Math.round(((product.originalPrice - product.currentPrice) / product.originalPrice) * 100) : 0;
                
                let priceHtml = '';
                if (hasDiscount) {
                    priceHtml = `
                        <div class="price-container">
                            <div class="original-price-line">
                                <span class="proloop-price--compare original-price">${formatPrice(product.originalPrice)}</span>
                            </div>
                            <div class="sale-price-line">
                                <span class="proloop-price--highlight sale-price">${formatPrice(product.currentPrice)}</span>
                                <span class="discount-badge">-${discountPercent}%</span>
                            </div>
                        </div>
                    `;
                } else {
                    priceHtml = `
                        <div class="price-container">
                            <span class="proloop-price--highlight regular-price">${formatPrice(product.currentPrice)}</span>
                        </div>
                    `;
                }

                const rating = product.rating || 0;
                const reviewCount = product.reviewCount || 0;
                const ratingHtml = `
                    <div class="proloop-rating">
                        <span class="number">${rating.toFixed(1)}</span>
                        <span class="count">(${reviewCount} đánh giá)</span>
                    </div>
                `;
                
                return `
                    <div class="proloop slick-slide recommendation-item" data-id="${product.id}" onclick="window.location.href='${product.url}'" title="Xem chi tiết ${product.name}">
                        <div class="proloop-block has-rating" id="fallback_recommendation_${product.id}">
                            <div class="proloop-img">
                                <div class="aspect-ratio fade-box">
                                    <img class="img-default lazyloaded" src="${product.image}" alt="${product.name}" onerror="this.src='/images/no-image.png'" />
                                </div>
                                <!-- Recommendation Badge -->
                                <div class="recommendation-badge">
                                    <i class="fas fa-history"></i>
                                </div>
                            </div>
                            <div class="proloop-detail">
                                <h3 class="proloop-name">${product.name}</h3>
                                <div class="proloop-price">
                                    ${priceHtml}
                                </div>
                                ${ratingHtml}
                            </div>
                        </div>
                    </div>
                `;
            }
        </script>
        <script src="~/js/slider.js"></script>
        <script src="~/js/recently-viewed.js"></script>
}