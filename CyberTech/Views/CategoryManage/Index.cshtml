@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "~/Views/Shared/Admin/_Layout.cshtml";
    ViewData["Title"] = "Quản lý danh mục";
}

@section Styles {
    <style>
        .category-container {
            background: #f8f9fa;
            min-height: calc(100vh - 140px);
            padding: 20px;
        }

        .category-header {
            background: white;
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .category-content {
            background: white;
            border-radius: 12px;
            padding: 25px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .category-tree {
            max-height: 600px;
            overflow-y: auto;
        }

        .category-item {
            border: 1px solid #e9ecef;
            border-radius: 8px;
            margin-bottom: 8px;
            transition: all 0.3s ease;
        }

        .category-item:hover {
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            transform: translateY(-1px);
        }

        .category-header-item {
            padding: 15px 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 8px 8px 0 0;
            cursor: pointer;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .subcategory-header {
            padding: 12px 20px;
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            color: white;
            margin: 8px 15px;
            border-radius: 6px;
            cursor: pointer;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .subsubcategory-item {
            padding: 10px 20px;
            background: #f8f9fa;
            margin: 5px 30px;
            border-radius: 6px;
            border-left: 4px solid #28a745;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .category-actions {
            display: flex;
            gap: 8px;
        }

        .btn-action {
            padding: 6px 12px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 12px;
        }

        .btn-edit {
            background: #ffc107;
            color: #212529;
        }

        .btn-edit:hover {
            background: #e0a800;
            transform: scale(1.05);
        }

        .btn-delete {
            background: #dc3545;
            color: white;
        }

        .btn-delete:hover {
            background: #c82333;
            transform: scale(1.05);
        }

        .btn-add {
            background: #28a745;
            color: white;
        }

        .btn-add:hover {
            background: #218838;
            transform: scale(1.05);
        }

        .category-collapse {
            background: #f8f9fa;
            border-radius: 0 0 8px 8px;
            padding: 10px;
        }

        .add-category-form {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 12px;
            margin-bottom: 20px;
        }

        .form-control:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }

        .modal-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .category-count {
            background: rgba(255,255,255,0.2);
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 12px;
            margin-left: 10px;
        }

        .empty-state {
            text-align: center;
            padding: 40px;
            color: #6c757d;
        }

        .empty-state i {
            font-size: 64px;
            margin-bottom: 20px;
            opacity: 0.5;
        }

        .search-box {
            position: relative;
            margin-bottom: 20px;
        }

        .search-box input {
            padding-left: 45px;
            border-radius: 25px;
            border: 2px solid #e9ecef;
        }

        .search-box i {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #6c757d;
        }

        .stats-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-bottom: 20px;
        }

        .stat-card {
            background: white;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            text-align: center;
        }

        .stat-card i {
            font-size: 32px;
            margin-bottom: 10px;
        }

        .stat-card .number {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .stat-card .label {
            color: #6c757d;
            font-size: 14px;
        }

        .stat-main { color: #667eea; }
        .stat-sub { color: #f5576c; }
        .stat-subsub { color: #28a745; }

        .btn-danger-custom {
            background: linear-gradient(135deg, #ff416c 0%, #ff4b2b 100%) !important;
            border: none !important;
            font-weight: 600 !important;
        }

        .btn-danger-custom:hover {
            background: linear-gradient(135deg, #ff4b2b 0%, #ff416c 100%) !important;
            transform: scale(1.02) !important;
        }

        /* Custom styles for delete category popup */
        .delete-category-popup {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif !important;
        }

        .delete-category-popup .swal2-html-container {
            padding: 0 !important;
            margin: 0 !important;
        }

        .delete-category-popup ul {
            list-style-type: none !important;
        }

        .delete-category-popup ul li {
            padding: 5px 0 !important;
            border-bottom: 1px solid #f0f0f0 !important;
        }

        .delete-category-popup ul li:last-child {
            border-bottom: none !important;
        }

        .delete-category-popup ul li:hover {
            background-color: #f8f9fa !important;
            border-radius: 4px !important;
            padding-left: 5px !important;
            transition: all 0.2s ease !important;
        }
    </style>
}

<div class="category-container">
    <!-- Header -->
    <div class="category-header">
        <div class="row align-items-center">
            <div class="col-md-6">
                <h2><i class="fas fa-layer-group"></i> Quản lý danh mục</h2>
                <p class="text-muted mb-0">Quản lý danh mục sản phẩm theo cấp bậc</p>
            </div>
            <div class="col-md-6 text-end">
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
                    <i class="fas fa-plus"></i> Thêm danh mục chính
                </button>
            </div>
        </div>
    </div>

    <!-- Statistics -->
    <div class="stats-cards">
        <div class="stat-card">
            <i class="fas fa-folder stat-main"></i>
            <div class="number" id="mainCategoryCount">8</div>
            <div class="label">Danh mục chính</div>
        </div>
        <div class="stat-card">
            <i class="fas fa-folder-open stat-sub"></i>
            <div class="number" id="subCategoryCount">24</div>
            <div class="label">Danh mục phụ</div>
        </div>
        <div class="stat-card">
            <i class="fas fa-file-alt stat-subsub"></i>
            <div class="number" id="subSubCategoryCount">47</div>
            <div class="label">Danh mục con</div>
        </div>
        <div class="stat-card">
            <i class="fas fa-box text-info"></i>
            <div class="number" id="productCount">156</div>
            <div class="label">Tổng sản phẩm</div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="category-content">
        <!-- Search -->
        <div class="search-box">
            <input type="text" class="form-control" placeholder="Tìm kiếm danh mục..." id="searchCategory">
            <i class="fas fa-search"></i>
        </div>

        <!-- Category Tree -->
        <div class="category-tree" id="categoryTree">
            <!-- Danh mục sẽ được load từ API -->
        </div>

        <!-- Empty State -->
        <div class="empty-state d-none" id="emptyState">
            <i class="fas fa-folder-open"></i>
            <h4>Chưa có danh mục nào</h4>
            <p>Hãy thêm danh mục đầu tiên để bắt đầu quản lý sản phẩm</p>
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
                <i class="fas fa-plus"></i> Thêm danh mục chính
            </button>
        </div>
    </div>
</div>

<!-- Add Category Modal -->
<div class="modal fade" id="addCategoryModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-plus"></i> Thêm danh mục mới
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addCategoryForm">
                    <div class="mb-3">
                        <label for="categoryType" class="form-label">Loại danh mục</label>
                        <select class="form-select" id="categoryType" onchange="updateCategoryForm()">
                            <option value="main">Danh mục chính</option>
                            <option value="sub">Danh mục phụ</option>
                            <option value="subsub">Danh mục con</option>
                        </select>
                    </div>
                    <div class="mb-3 d-none" id="parentCategoryGroup">
                        <label for="parentCategory" class="form-label">Danh mục cha</label>
                        <select class="form-select" id="parentCategory">
                            <option value="">Chọn danh mục cha</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="categoryName" class="form-label">Tên danh mục</label>
                        <input type="text" class="form-control" id="categoryName" required>
                    </div>
                    <div class="mb-3">
                        <label for="categoryDescription" class="form-label">Mô tả</label>
                        <textarea class="form-control" id="categoryDescription" rows="3"></textarea>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="categoryIcon" class="form-label">Icon</label>
                                <input type="text" class="form-control" id="categoryIcon" placeholder="fas fa-mobile-alt">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="categoryColor" class="form-label">Màu sắc</label>
                                <input type="color" class="form-control form-control-color" id="categoryColor" value="#667eea">
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="categoryActive" checked>
                            <label class="form-check-label" for="categoryActive">
                                Kích hoạt danh mục
                            </label>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" onclick="saveCategory()">Lưu danh mục</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Category Modal -->
<div class="modal fade" id="editCategoryModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-edit"></i> Chỉnh sửa danh mục
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editCategoryForm">
                    <input type="hidden" id="editCategoryId">
                    <input type="hidden" id="editCategoryTypeHidden">
                    <div class="mb-3">
                        <label for="editCategoryName" class="form-label">Tên danh mục</label>
                        <input type="text" class="form-control" id="editCategoryName" required>
                    </div>
                    <div class="mb-3">
                        <label for="editCategoryDescription" class="form-label">Mô tả</label>
                        <textarea class="form-control" id="editCategoryDescription" rows="3"></textarea>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="editCategoryIcon" class="form-label">Icon</label>
                                <input type="text" class="form-control" id="editCategoryIcon">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="editCategoryColor" class="form-label">Màu sắc</label>
                                <input type="color" class="form-control form-control-color" id="editCategoryColor">
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="editCategoryActive">
                            <label class="form-check-label" for="editCategoryActive">
                                Kích hoạt danh mục
                            </label>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" onclick="updateCategory()">Cập nhật</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        // Global variables
        let currentEditId = null;
        let currentEditType = null;
        let categoriesData = [];

        // Initialize page
        $(document).ready(function() {
            // Show loading state immediately
            showLoadingState();
            
            // Load data in parallel for better performance
            Promise.all([
                loadCategoriesOptimized(),
                updateStatisticsOptimized()
            ]).then(() => {
                hideLoadingState();
            }).catch(() => {
                hideLoadingState();
                Swal.fire('Lỗi!', 'Không thể tải dữ liệu', 'error');
            });
            
            // Search functionality
            $('#searchCategory').on('input', debounce(function() {
                filterCategories($(this).val());
            }, 300));

            // Collapse/expand icons
            $(document).on('click', '.category-header-item, .subcategory-header', function() {
                const icon = $(this).find('i:first');
                icon.toggleClass('fa-chevron-right fa-chevron-down');
            });
        });

        // Show loading state
        function showLoadingState() {
            $('#categoryTree').html(`
                <div class="text-center py-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Đang tải...</span>
                    </div>
                    <div class="mt-2">Đang tải danh mục...</div>
                </div>
            `);
        }

        // Hide loading state
        function hideLoadingState() {
            // Loading state will be replaced by actual content
        }

        // Debounce function for search
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        // Load categories đơn giản
        function loadCategoriesOptimized() {
            return $.get('/CategoryManage/GetCategoriesTree')
                .done(function(response) {
                    if (response.success) {
                        categoriesData = response.data;
                        renderCategoriesTreeOptimized(response.data);
                        
                        // Show empty state if no categories
                        if (response.data.length === 0) {
                            $('#categoryTree').addClass('d-none');
                            $('#emptyState').removeClass('d-none');
                        } else {
                            $('#categoryTree').removeClass('d-none');
                            $('#emptyState').addClass('d-none');
                        }
                        
                        // Log cache status
                        if (response.cached) {
                            console.log('✅ Loaded from cache');
                        }
                    }
                })
                .fail(function() {
                    console.error('❌ Failed to load categories');
                });
        }

        // Load statistics đơn giản
        function updateStatisticsOptimized() {
            return $.get('/CategoryManage/GetStatistics')
                .done(function(response) {
                    if (response.success) {
                        const data = response.data;
                        $('#mainCategoryCount').text(data.mainCategoryCount);
                        $('#subCategoryCount').text(data.subCategoryCount);
                        $('#subSubCategoryCount').text(data.subSubCategoryCount);
                        $('#productCount').text(data.productCount);
                    }
                })
                .fail(function() {
                    console.error('❌ Failed to load statistics');
                });
        }

        // Optimized render categories tree with document fragment
        function renderCategoriesTreeOptimized(categories) {
            if (!categories || categories.length === 0) {
                $('#categoryTree').html('<div class="text-center py-4 text-muted">Chưa có danh mục nào</div>');
                return;
            }

            // Use DocumentFragment for better performance
            const fragment = document.createDocumentFragment();
            const tempDiv = document.createElement('div');
            
            const treeHtml = categories.map(category => {
                const subcategoriesHtml = (category.subcategories || []).map(subcategory => {
                    const subSubcategoriesHtml = (subcategory.subSubcategories || []).map(subSubcategory => `
                        <div class="subsubcategory-item">
                            <span>${escapeHtml(subSubcategory.name)}</span>
                            <div class="category-actions">
                                <button class="btn-action btn-edit" onclick="editCategory(${subSubcategory.id}, 'subsub')" title="Sửa">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn-action btn-delete" onclick="deleteCategory(${subSubcategory.id}, 'subsub')" title="Xóa">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                    `).join('');

                    return `
                        <div class="subcategory-header" data-bs-toggle="collapse" data-bs-target="#subcategory${category.id}-${subcategory.id}">
                            <div>
                                <i class="fas fa-chevron-right me-2"></i>
                                <strong>${escapeHtml(subcategory.name)}</strong>
                                <span class="category-count">${subcategory.productCount || 0} sản phẩm</span>
                            </div>
                            <div class="category-actions" onclick="event.stopPropagation()">
                                <button class="btn-action btn-add" onclick="addSubSubCategory(${category.id}, ${subcategory.id})" title="Thêm danh mục con">
                                    <i class="fas fa-plus"></i>
                                </button>
                                <button class="btn-action btn-edit" onclick="editCategory(${subcategory.id}, 'sub')" title="Sửa">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn-action btn-delete" onclick="deleteCategory(${subcategory.id}, 'sub')" title="Xóa">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                        <div class="collapse" id="subcategory${category.id}-${subcategory.id}">
                            ${subSubcategoriesHtml}
                        </div>
                    `;
                }).join('');

                return `
                    <div class="category-item" data-category-id="${category.id}">
                        <div class="category-header-item" data-bs-toggle="collapse" data-bs-target="#category${category.id}">
                            <div>
                                <i class="fas fa-chevron-right me-2"></i>
                                <strong>${escapeHtml(category.name)}</strong>
                                <span class="category-count">${category.productCount || 0} sản phẩm</span>
                            </div>
                            <div class="category-actions" onclick="event.stopPropagation()">
                                <button class="btn-action btn-add" onclick="addSubCategory(${category.id})" title="Thêm danh mục phụ">
                                    <i class="fas fa-plus"></i>
                                </button>
                                <button class="btn-action btn-edit" onclick="editCategory(${category.id}, 'main')" title="Sửa">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn-action btn-delete" onclick="deleteCategory(${category.id}, 'main')" title="Xóa">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                        <div class="collapse category-collapse" id="category${category.id}">
                            ${subcategoriesHtml}
                        </div>
                    </div>
                `;
            }).join('');

            tempDiv.innerHTML = treeHtml;
            while (tempDiv.firstChild) {
                fragment.appendChild(tempDiv.firstChild);
            }
            
            // Update DOM in one operation
            const treeContainer = document.getElementById('categoryTree');
            treeContainer.innerHTML = '';
            treeContainer.appendChild(fragment);
        }

        // Escape HTML to prevent XSS
        function escapeHtml(text) {
            const map = {
                '&': '&amp;',
                '<': '&lt;',
                '>': '&gt;',
                '"': '&quot;',
                "'": '&#039;'
            };
            return text.replace(/[&<>"']/g, function(m) { return map[m]; });
        }

        // Keep original functions for backward compatibility
        function loadCategories() {
            return loadCategoriesOptimized();
        }

        function renderCategoriesTree(categories) {
            return renderCategoriesTreeOptimized(categories);
        }

        function updateStatistics() {
            return updateStatisticsOptimized();
        }

        // Filter categories
        function filterCategories(searchTerm) {
            const categoryItems = $('.category-item');
            if (!searchTerm) {
                categoryItems.show();
                return;
            }

            categoryItems.each(function() {
                const categoryText = $(this).text().toLowerCase();
                if (categoryText.includes(searchTerm.toLowerCase())) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });
        }

        // Update category form based on type
        function updateCategoryForm() {
            const type = $('#categoryType').val();
            const parentGroup = $('#parentCategoryGroup');
            
            if (type === 'main') {
                parentGroup.addClass('d-none');
            } else {
                parentGroup.removeClass('d-none');
                loadParentCategories(type);
            }
        }

        // Load parent categories for dropdowns
        function loadParentCategories(type) {
            $.get('/CategoryManage/GetParentCategories', { type: type })
                .done(function(response) {
                    if (response.success) {
                        const parentSelect = $('#parentCategory');
                        parentSelect.empty().append('<option value="">Chọn danh mục cha</option>');
                        
                        response.data.forEach(function(item) {
                            parentSelect.append(`<option value="${item.value}">${item.text}</option>`);
                        });
                    }
                })
                .fail(function() {
                    Swal.fire('Lỗi!', 'Không thể tải danh sách danh mục cha', 'error');
                });
        }

        // Add subcategory
        function addSubCategory(parentId) {
            $('#categoryType').val('sub').trigger('change');
            $('#parentCategory').val(parentId);
            $('#addCategoryModal').modal('show');
        }

        // Add sub-subcategory
        function addSubSubCategory(parentId, subId) {
            $('#categoryType').val('subsub').trigger('change');
            $('#parentCategory').val(subId);
            $('#addCategoryModal').modal('show');
        }

        // Save category
        function saveCategory() {
            const formData = {
                type: $('#categoryType').val(),
                parentId: $('#parentCategory').val() || null,
                name: $('#categoryName').val(),
                description: $('#categoryDescription').val(),
                icon: $('#categoryIcon').val(),
                color: $('#categoryColor').val(),
                active: $('#categoryActive').is(':checked')
            };

            if (!formData.name.trim()) {
                Swal.fire('Lỗi!', 'Vui lòng nhập tên danh mục', 'error');
                return;
            }

            // Show loading
            Swal.fire({
                title: 'Đang lưu...',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            $.ajax({
                url: '/CategoryManage/CreateCategory',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function(response) {
                    if (response.success) {
                        Swal.fire('Thành công!', response.message, 'success');
                        $('#addCategoryModal').modal('hide');
                        $('#addCategoryForm')[0].reset();
                        loadCategories();
                        updateStatistics();
                    } else {
                        Swal.fire('Lỗi!', response.message, 'error');
                    }
                },
                error: function() {
                    Swal.fire('Lỗi!', 'Có lỗi xảy ra khi lưu danh mục', 'error');
                }
            });
        }

        // Edit category
        function editCategory(id, type) {
            currentEditId = id;
            currentEditType = type;
            
            // Show loading
            Swal.fire({
                title: 'Đang tải...',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            $.get('/CategoryManage/GetCategory', { id: id, type: type })
                .done(function(response) {
                    Swal.close();
                    if (response.success) {
                        const data = response.data;
                        
                        // Populate form
                        $('#editCategoryId').val(data.id);
                        $('#editCategoryTypeHidden').val(data.type);
                        $('#editCategoryName').val(data.name);
                        $('#editCategoryDescription').val(data.description || '');
                        $('#editCategoryIcon').val(data.icon || '');
                        $('#editCategoryColor').val(data.color || '#667eea');
                        $('#editCategoryActive').prop('checked', data.active !== false);

                        $('#editCategoryModal').modal('show');
                    } else {
                        Swal.fire('Lỗi!', response.message, 'error');
                    }
                })
                .fail(function() {
                    Swal.close();
                    Swal.fire('Lỗi!', 'Không thể tải thông tin danh mục', 'error');
                });
        }

        // Update category
        function updateCategory() {
            const formData = {
                id: parseInt($('#editCategoryId').val()),
                type: $('#editCategoryTypeHidden').val(),
                name: $('#editCategoryName').val(),
                description: $('#editCategoryDescription').val(),
                icon: $('#editCategoryIcon').val(),
                color: $('#editCategoryColor').val(),
                active: $('#editCategoryActive').is(':checked')
            };

            if (!formData.name.trim()) {
                Swal.fire('Lỗi!', 'Vui lòng nhập tên danh mục', 'error');
                return;
            }

            // Show loading
            Swal.fire({
                title: 'Đang cập nhật...',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            $.ajax({
                url: '/CategoryManage/UpdateCategory',
                type: 'PUT',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function(response) {
                    if (response.success) {
                        Swal.fire('Thành công!', response.message, 'success');
                        $('#editCategoryModal').modal('hide');
                        loadCategories();
                    } else {
                        Swal.fire('Lỗi!', response.message, 'error');
                    }
                },
                error: function() {
                    Swal.fire('Lỗi!', 'Có lỗi xảy ra khi cập nhật danh mục', 'error');
                }
            });
        }

        // Delete category with cascade warning
        function deleteCategory(id, type) {
            let title = 'Xóa danh mục?';
            let htmlContent = '';
            
            if (type === 'main') {
                title = '🗑️ Xóa danh mục chính';
                htmlContent = `
                    <div style="text-align: center; font-size: 14px;">
                        <p><strong style="color: #dc3545;">Khi xóa danh mục chính, tất cả dữ liệu sau sẽ bị xóa vĩnh viễn:</strong></p>
                        <ul style="margin: 15px 0; padding-left: 20px;">
                            <li>📁 Tất cả danh mục phụ và danh mục con</li>
                            <li>📦 Tất cả sản phẩm trong danh mục</li>
                            <li>🖼️ Hình ảnh sản phẩm</li>
                            <li>🛒 Giỏ hàng có chứa sản phẩm này</li>
                            <li>❤️ Danh sách yêu thích</li>
                            <li>⭐ Đánh giá sản phẩm</li>
                            <li>🔔 Đăng ký thông báo hết hàng</li>
                            <li>📋 Lịch sử đơn hàng liên quan</li>
                        </ul>
                        <div style="background: #fff3cd; border: 1px solid #ffeaa7; border-radius: 5px; padding: 10px; margin-top: 15px;">
                            <strong style="color: #856404;">⚠️ Hành động này KHÔNG THỂ HOÀN TÁC!</strong>
                        </div>
                    </div>
                `;
            } else if (type === 'sub') {
                title = '🗑️ Xóa danh mục phụ';
                htmlContent = `
                    <div style="text-align: center; font-size: 14px;">
                        <p><strong style="color: #dc3545;">Khi xóa danh mục phụ, tất cả dữ liệu sau sẽ bị xóa vĩnh viễn:</strong></p>
                        <ul style="margin: 15px 0; padding-left: 20px;">
                            <li>📁 Tất cả danh mục con</li>
                            <li>📦 Tất cả sản phẩm trong danh mục</li>
                            <li>🖼️ Hình ảnh sản phẩm</li>
                            <li>🛒 Giỏ hàng có chứa sản phẩm này</li>
                            <li>❤️ Danh sách yêu thích</li>
                            <li>⭐ Đánh giá sản phẩm</li>
                            <li>🔔 Đăng ký thông báo hết hàng</li>
                            <li>📋 Lịch sử đơn hàng liên quan</li>
                        </ul>
                        <div style="background: #fff3cd; border: 1px solid #ffeaa7; border-radius: 5px; padding: 10px; margin-top: 15px;">
                            <strong style="color: #856404;">⚠️ Hành động này KHÔNG THỂ HOÀN TÁC!</strong>
                        </div>
                    </div>
                `;
            } else {
                title = '🗑️ Xóa danh mục con';
                htmlContent = `
                    <div style="text-align: center; font-size: 14px;">
                        <p><strong style="color: #dc3545;">Khi xóa danh mục con, tất cả dữ liệu sau sẽ bị xóa vĩnh viễn:</strong></p>
                        <ul style="margin: 15px 0; padding-left: 20px;">
                            <li>📦 Tất cả sản phẩm trong danh mục</li>
                            <li>🖼️ Hình ảnh sản phẩm</li>
                            <li>🛒 Giỏ hàng có chứa sản phẩm này</li>
                            <li>❤️ Danh sách yêu thích</li>
                            <li>⭐ Đánh giá sản phẩm</li>
                            <li>🔔 Đăng ký thông báo hết hàng</li>
                            <li>📋 Lịch sử đơn hàng liên quan</li>
                        </ul>
                        <div style="background: #fff3cd; border: 1px solid #ffeaa7; border-radius: 5px; padding: 10px; margin-top: 15px;">
                            <strong style="color: #856404;">⚠️ Hành động này KHÔNG THỂ HOÀN TÁC!</strong>
                        </div>
                    </div>
                `;
            }

            Swal.fire({
                title: title,
                html: htmlContent,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#dc3545',
                cancelButtonColor: '#6c757d',
                confirmButtonText: '🗑️ XÁC NHẬN XÓA',
                cancelButtonText: '❌ HỦY BỎ',
                reverseButtons: true,
                customClass: {
                    confirmButton: 'btn-danger-custom',
                    popup: 'delete-category-popup'
                },
                width: 650,
                allowEscapeKey: true,
                allowOutsideClick: false
            }).then((result) => {
                if (result.isConfirmed) {
                    performDelete(id, type);
                }
            });
        }

        // Perform delete operation
        function performDelete(id, type) {
            Swal.fire({
                title: 'Đang xóa...',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            $.ajax({
                url: '/CategoryManage/DeleteCategory',
                type: 'DELETE',
                data: { id: id, type: type },
                success: function(response) {
                    if (response.success) {
                        // Format thông báo thành công đẹp hơn
                        const successHtml = `
                            <div style="text-align: center; font-size: 14px;">
                                <div style="background: #d4edda; border: 1px solid #c3e6cb; border-radius: 8px; padding: 15px; margin-bottom: 15px;">
                                    <h4 style="color: #155724; margin: 0 0 10px 0;">✅ Xóa thành công!</h4>
                                    <p style="margin: 0; color: #155724;">${response.message.split('\n')[0]}</p>
                                </div>
                                <div style="background: #f8f9fa; border: 1px solid #dee2e6; border-radius: 8px; padding: 15px;">
                                    <h5 style="color: #495057; margin: 0 0 10px 0;">📋 Dữ liệu đã được xóa:</h5>
                                    <ul style="text-align: left; margin: 0; padding-left: 20px; color: #6c757d;">
                                        <li>🖼️ Hình ảnh sản phẩm</li>
                                        <li>🛒 Giỏ hàng chứa sản phẩm</li>
                                        <li>❤️ Danh sách yêu thích</li>
                                        <li>⭐ Đánh giá sản phẩm</li>
                                        <li>🔔 Đăng ký thông báo hết hàng</li>
                                        <li>📋 Lịch sử đơn hàng liên quan</li>
                                    </ul>
                                </div>
                            </div>
                        `;
                        
                        Swal.fire({
                            title: '🎉 Hoàn thành',
                            html: successHtml,
                            icon: 'success',
                            confirmButtonText: '👌 Đã hiểu',
                            confirmButtonColor: '#28a745',
                            width: 600
                        });
                        loadCategories();
                        updateStatistics();
                    } else {
                        Swal.fire('Lỗi!', response.message, 'error');
                    }
                },
                error: function() {
                    Swal.fire('Lỗi!', 'Có lỗi xảy ra khi xóa danh mục', 'error');
                }
            });
        }
    </script>
}