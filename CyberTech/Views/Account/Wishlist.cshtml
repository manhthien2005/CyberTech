@model List<CyberTech.Models.WishlistItem>
@{
    ViewData["Title"] = "Sản phẩm yêu thích";
}

@Html.AntiForgeryToken()

<div class="account-dashboard">
    <div class="row">
        <!-- Sidebar -->
        <div class="col-lg-3">
            @Html.Partial("_AccountSidebar")
        </div>
        <!-- Main Content -->
        <div class="col-lg-9">
            <div class="wishlist-section">
                <div class="wishlist-header">
                    <h2>Sản phẩm yêu thích</h2>
                    <div class="wishlist-count">@ViewBag.TotalItems sản phẩm</div>
                </div>

                @if (Model.Count > 0)
                {
                    <div class="wishlist-grid">
                        @foreach (var item in Model)
                        {
                            <div class="wishlist-card" data-product-id="@item.ProductID">
                                <div class="wishlist-image">
                                    <img src="@(item.Product.ProductImages.FirstOrDefault()?.ImageURL ?? "/images/no-image.png")" alt="@item.Product.Name">
                                    <button class="btn-remove-wishlist" data-product-id="@item.ProductID">
                                        <i class="fas fa-heart"></i>
                                    </button>
                                </div>
                                <div class="wishlist-content">
                                    <h3 class="product-name">@item.Product.Name</h3>
                                    <div class="product-price">
                                        @if (item.Product.SalePrice.HasValue)
                                        {
                                            <span class="sale-price">@item.Product.SalePrice.Value.ToString("N0")đ</span>
                                            <span class="original-price">@item.Product.Price.ToString("N0")đ</span>
                                        }
                                        else
                                        {
                                            <span class="price">@item.Product.Price.ToString("N0")đ</span>
                                        }
                                    </div>
                                    <div class="product-stock @(item.Product.Stock > 0 ? "in-stock" : "out-of-stock")">
                                        @(item.Product.Stock > 0 ? "Còn hàng" : "Hết hàng")
                                    </div>
                                    <div class="wishlist-actions">
                                        <a href="/Product/ProductDetail/@item.ProductID" class="btn btn-view">
                                            <i class="fas fa-eye"></i> Xem chi tiết
                                        </a>
                                        @if (item.Product.Stock > 0)
                                        {
                                            <button class="btn btn-add-cart" data-product-id="@item.ProductID">
                                                <i class="fas fa-shopping-cart"></i> Thêm vào giỏ
                                            </button>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <!-- Pagination -->
                    <div class="pagination-container mt-4">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="pagination-info">
                                @if (ViewBag.TotalItems > 0)
                                {
                                    <span>Hiển thị @(((ViewBag.CurrentPage - 1) * 6) + 1) - @(Math.Min(ViewBag.CurrentPage * 6, ViewBag.TotalItems)) của @ViewBag.TotalItems sản phẩm</span>
                                }
                                else
                                {
                                    <span>Không tìm thấy sản phẩm nào</span>
                                }
                            </div>
                            @if (ViewBag.TotalPages > 1)
                            {
                                <nav aria-label="Page navigation">
                                    <ul class="pagination mb-0">
                                        <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                                            <a class="page-link" href="@Url.Action("Wishlist", new { page = ViewBag.CurrentPage - 1 })" aria-label="Previous">
                                                <span aria-hidden="true">&laquo;</span>
                                            </a>
                                        </li>
                                        @for (int i = 1; i <= ViewBag.TotalPages; i++)
                                        {
                                            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                                <a class="page-link" href="@Url.Action("Wishlist", new { page = i })">@i</a>
                                            </li>
                                        }
                                        <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                                            <a class="page-link" href="@Url.Action("Wishlist", new { page = ViewBag.CurrentPage + 1 })" aria-label="Next">
                                                <span aria-hidden="true">&raquo;</span>
                                            </a>
                                        </li>
                                    </ul>
                                </nav>
                            }
                        </div>
                    </div>
                }
                else
                {
                    <div class="empty-wishlist">
                        <i class="fas fa-heart"></i>
                        <h4>Chưa có sản phẩm yêu thích</h4>
                        <p>Hãy thêm sản phẩm vào danh sách yêu thích để dễ dàng theo dõi</p>
                        <a href="@Url.Action("Index", "Home")" class="btn btn-primary">Khám phá sản phẩm</a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/css/account-dashboard.css">
    <style>
        .wishlist-section {
            background: white;
            border-radius: 15px;
            box-shadow: 0 2px 15px rgba(0,0,0,0.08);
            padding: 2rem;
        }

        .wishlist-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid #e9ecef;
        }

        .wishlist-header h2 {
            font-size: 1.5rem;
            font-weight: 600;
            color: #2c3e50;
            margin: 0;
        }

        .wishlist-count {
            color: #6c757d;
            font-size: 0.9rem;
        }

        .wishlist-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .wishlist-card {
            background: #fff;
            border: 1px solid #e9ecef;
            border-radius: 12px;
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .wishlist-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 20px rgba(0,0,0,0.1);
        }

        .wishlist-image {
            position: relative;
            padding-top: 100%;
            overflow: hidden;
        }

        .wishlist-image img {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .btn-remove-wishlist {
            position: absolute;
            top: 1rem;
            right: 1rem;
            background: rgba(255,255,255,0.9);
            border: none;
            width: 35px;
            height: 35px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .btn-remove-wishlist i {
            color: #dc3545;
            font-size: 1.1rem;
        }

        .btn-remove-wishlist:hover {
            background: #dc3545;
        }

        .btn-remove-wishlist:hover i {
            color: white;
        }

        .wishlist-content {
            padding: 1.5rem;
        }

        .product-name {
            font-size: 1.1rem;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 1rem;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            height: 2.8em;
        }

        .product-price {
            margin-bottom: 1rem;
        }

        .sale-price {
            font-size: 1.2rem;
            font-weight: 600;
            color: #dc3545;
            margin-right: 0.5rem;
        }

        .original-price {
            font-size: 0.9rem;
            color: #6c757d;
            text-decoration: line-through;
        }

        .price {
            font-size: 1.2rem;
            font-weight: 600;
            color: #2c3e50;
        }

        .product-stock {
            font-size: 0.9rem;
            margin-bottom: 1rem;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            display: inline-block;
        }

        .in-stock {
            background: #d4edda;
            color: #155724;
        }

        .out-of-stock {
            background: #f8d7da;
            color: #721c24;
        }

        .wishlist-actions {
            display: flex;
            gap: 0.75rem;
        }

        .wishlist-actions .btn {
            flex: 1;
            padding: 0.5rem;
            font-size: 0.9rem;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .btn-view {
            background: #e3f2fd;
            color: #0077cc;
            border: none;
        }

        .btn-view:hover {
            background: #0077cc;
            color: white;
        }

        .btn-add-cart {
            background: #0077cc;
            color: white;
            border: none;
        }

        .btn-add-cart:hover {
            background: #0056b3;
        }

        .empty-wishlist {
            text-align: center;
            padding: 3rem 1rem;
            color: #6c757d;
        }

        .empty-wishlist i {
            font-size: 3rem;
            color: #dee2e6;
            margin-bottom: 1rem;
        }

        .empty-wishlist h4 {
            font-size: 1.25rem;
            font-weight: 600;
            color: #495057;
            margin-bottom: 0.5rem;
        }

        .empty-wishlist p {
            margin-bottom: 1.5rem;
        }

        /* Pagination Styles */
        .pagination-container {
            background: #fff;
            padding: 15px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }

        .pagination-info {
            color: #6c757d;
            font-size: 0.9rem;
        }

        .pagination {
            margin: 0;
        }

        .page-link {
            color: #0077cc;
            border: 1px solid #dee2e6;
            padding: 0.5rem 0.75rem;
            margin: 0 2px;
            border-radius: 4px;
            transition: all 0.3s ease;
        }

        .page-link:hover {
            background-color: #e9ecef;
            border-color: #dee2e6;
            color: #0056b3;
        }

        .page-item.active .page-link {
            background-color: #0077cc;
            border-color: #0077cc;
            color: #fff;
        }

        .page-item.disabled .page-link {
            color: #6c757d;
            pointer-events: none;
            background-color: #fff;
            border-color: #dee2e6;
        }

        @@media (max-width: 1200px) {
            .wishlist-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @@media (max-width: 768px) {
            .wishlist-grid {
                grid-template-columns: 1fr;
            }

            .wishlist-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 1rem;
            }

            .wishlist-actions {
                flex-direction: column;
            }
        }
    </style>
}

@section Scripts {
    <script>
        $(function() {
            // Remove from wishlist
            $('.btn-remove-wishlist').on('click', function() {
                var productId = $(this).data('product-id');
                var card = $(this).closest('.wishlist-card');
                var token = $('input[name="__RequestVerificationToken"]').val();
                var currentPage = @ViewBag.CurrentPage;
                var totalPages = @ViewBag.TotalPages;

                $.ajax({
                    url: '/Account/ToggleWishlist',
                    type: 'POST',
                    data: { productId: productId },
                    headers: {
                        'RequestVerificationToken': token,
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    success: function(response) {
                        if (response.success) {
                            card.fadeOut(300, function() {
                                $(this).remove();
                                updateWishlistCount();
                                
                                // If this was the last item on the current page and not the first page
                                if ($('.wishlist-card').length === 0 && currentPage > 1) {
                                    // Redirect to previous page
                                    window.location.href = '/Account/Wishlist?page=' + (currentPage - 1);
                                } else {
                                    // Update the wishlist section
                                    updateWishlistSection(currentPage);
                                }
                            });
                            utils.showToast(response.message || 'Đã xóa khỏi danh sách yêu thích', 'success');
                        } else {
                            utils.showToast(response.message || 'Có lỗi xảy ra', 'error');
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Error:', error);
                        utils.showToast('Có lỗi xảy ra khi thực hiện thao tác', 'error');
                    }
                });
            });

            // Add to cart
            $('.btn-add-cart').on('click', function() {
                var productId = $(this).data('product-id');
                var button = $(this);
                var token = $('input[name="__RequestVerificationToken"]').val();

                $.ajax({
                    url: '/Cart/AddToCart',
                    type: 'POST',
                    data: { 
                        productId: productId,
                        quantity: 1
                    },
                    headers: {
                        'RequestVerificationToken': token,
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    success: function(response) {
                        if (response.success) {
                            utils.showToast('Đã thêm vào giỏ hàng', 'success');
                            updateCartCount(response.cartCount);
                        } else {
                            utils.showToast(response.message || 'Có lỗi xảy ra', 'error');
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Error:', error);
                        utils.showToast('Có lỗi xảy ra khi thêm vào giỏ hàng', 'error');
                    }
                });
            });

            function updateWishlistCount() {
                var count = $('.wishlist-card').length;
                $('.wishlist-count').text(count + ' sản phẩm');
                
                if (count === 0) {
                    $('.wishlist-grid').html(`
                        <div class="empty-wishlist">
                            <i class="fas fa-heart"></i>
                            <h4>Chưa có sản phẩm yêu thích</h4>
                            <p>Hãy thêm sản phẩm vào danh sách yêu thích để dễ dàng theo dõi</p>
                            <a href="/Product" class="btn btn-primary">Khám phá sản phẩm</a>
                        </div>
                    `);
                }
            }

            function updateWishlistSection(page) {
                $.ajax({
                    url: '/Account/Wishlist',
                    type: 'GET',
                    data: { page: page },
                    success: function(response) {
                        // Extract the wishlist section from the response
                        var tempDiv = $('<div>').html(response);
                        var newWishlistSection = tempDiv.find('.wishlist-section');
                        
                        // Update the current wishlist section
                        $('.wishlist-section').replaceWith(newWishlistSection);
                        
                        // Reattach event handlers
                        attachEventHandlers();
                    },
                    error: function(xhr, status, error) {
                        console.error('Error updating wishlist section:', error);
                        utils.showToast('Có lỗi xảy ra khi cập nhật danh sách', 'error');
                    }
                });
            }

            function attachEventHandlers() {
                // Reattach click handlers for remove and add to cart buttons
                $('.btn-remove-wishlist').on('click', function() {
                    var productId = $(this).data('product-id');
                    var card = $(this).closest('.wishlist-card');
                    var token = $('input[name="__RequestVerificationToken"]').val();
                    var currentPage = @ViewBag.CurrentPage;
                    var totalPages = @ViewBag.TotalPages;

                    $.ajax({
                        url: '/Account/ToggleWishlist',
                        type: 'POST',
                        data: { productId: productId },
                        headers: {
                            'RequestVerificationToken': token,
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                        success: function(response) {
                            if (response.success) {
                                card.fadeOut(300, function() {
                                    $(this).remove();
                                    updateWishlistCount();
                                    
                                    if ($('.wishlist-card').length === 0 && currentPage > 1) {
                                        window.location.href = '/Account/Wishlist?page=' + (currentPage - 1);
                                    } else {
                                        updateWishlistSection(currentPage);
                                    }
                                });
                                utils.showToast(response.message || 'Đã xóa khỏi danh sách yêu thích', 'success');
                            } else {
                                utils.showToast(response.message || 'Có lỗi xảy ra', 'error');
                            }
                        },
                        error: function(xhr, status, error) {
                            console.error('Error:', error);
                            utils.showToast('Có lỗi xảy ra khi thực hiện thao tác', 'error');
                        }
                    });
                });

                $('.btn-add-cart').on('click', function() {
                    var productId = $(this).data('product-id');
                    var button = $(this);
                    var token = $('input[name="__RequestVerificationToken"]').val();

                    $.ajax({
                        url: '/Cart/AddToCart',
                        type: 'POST',
                        data: { 
                            productId: productId,
                            quantity: 1
                        },
                        headers: {
                            'RequestVerificationToken': token,
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                        success: function(response) {
                            if (response.success) {
                                utils.showToast('Đã thêm vào giỏ hàng', 'success');
                                updateCartCount(response.cartCount);
                            } else {
                                utils.showToast(response.message || 'Có lỗi xảy ra', 'error');
                            }
                        },
                        error: function(xhr, status, error) {
                            console.error('Error:', error);
                            utils.showToast('Có lỗi xảy ra khi thêm vào giỏ hàng', 'error');
                        }
                    });
                });
            }

            function updateCartCount(count) {
                $('.cart-count').text(count);
            }
        });
    </script>
} 